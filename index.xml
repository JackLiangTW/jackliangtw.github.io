<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jack Liang&#39;s portfolio and blog</title>
    <link>https://jackliangtw.github.io/</link>
    <description>Recent content on Jack Liang&#39;s portfolio and blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 May 2023 14:33:01 +0530</lastBuildDate><atom:link href="https://jackliangtw.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Android遊戲-藏詩三百種(大學畢製)</title>
      <link>https://jackliangtw.github.io/portfolio/work12/</link>
      <pubDate>Thu, 25 May 2023 14:33:01 +0530</pubDate>
      
      <guid>https://jackliangtw.github.io/portfolio/work12/</guid>
      <description></description>
    </item>
    
    <item>
      <title>JS遊戲-小精靈</title>
      <link>https://jackliangtw.github.io/portfolio/work11/</link>
      <pubDate>Thu, 25 May 2023 14:33:01 +0530</pubDate>
      
      <guid>https://jackliangtw.github.io/portfolio/work11/</guid>
      <description></description>
    </item>
    
    <item>
      <title>JS遊戲-轉珠模擬器</title>
      <link>https://jackliangtw.github.io/portfolio/work10/</link>
      <pubDate>Thu, 25 May 2023 14:33:01 +0530</pubDate>
      
      <guid>https://jackliangtw.github.io/portfolio/work10/</guid>
      <description></description>
    </item>
    
    <item>
      <title>JS遊戲-黑白棋</title>
      <link>https://jackliangtw.github.io/portfolio/work9/</link>
      <pubDate>Thu, 25 May 2023 14:33:01 +0530</pubDate>
      
      <guid>https://jackliangtw.github.io/portfolio/work9/</guid>
      <description></description>
    </item>
    
    <item>
      <title>前端切版-國泰產險(1)</title>
      <link>https://jackliangtw.github.io/portfolio/work4/</link>
      <pubDate>Thu, 25 May 2023 14:33:01 +0530</pubDate>
      
      <guid>https://jackliangtw.github.io/portfolio/work4/</guid>
      <description></description>
    </item>
    
    <item>
      <title>前端切版-國泰產險(2)</title>
      <link>https://jackliangtw.github.io/portfolio/work5/</link>
      <pubDate>Thu, 25 May 2023 14:33:01 +0530</pubDate>
      
      <guid>https://jackliangtw.github.io/portfolio/work5/</guid>
      <description></description>
    </item>
    
    <item>
      <title>前端切版-國泰產險(3)</title>
      <link>https://jackliangtw.github.io/portfolio/work6/</link>
      <pubDate>Thu, 25 May 2023 14:33:01 +0530</pubDate>
      
      <guid>https://jackliangtw.github.io/portfolio/work6/</guid>
      <description></description>
    </item>
    
    <item>
      <title>前端切版-國泰產險(4)</title>
      <link>https://jackliangtw.github.io/portfolio/work7/</link>
      <pubDate>Thu, 25 May 2023 14:33:01 +0530</pubDate>
      
      <guid>https://jackliangtw.github.io/portfolio/work7/</guid>
      <description></description>
    </item>
    
    <item>
      <title>前端切版-國泰產險(5)</title>
      <link>https://jackliangtw.github.io/portfolio/work8/</link>
      <pubDate>Thu, 25 May 2023 14:33:01 +0530</pubDate>
      
      <guid>https://jackliangtw.github.io/portfolio/work8/</guid>
      <description></description>
    </item>
    
    <item>
      <title>前端切版-新秀麗</title>
      <link>https://jackliangtw.github.io/portfolio/work3/</link>
      <pubDate>Thu, 25 May 2023 14:33:01 +0530</pubDate>
      
      <guid>https://jackliangtw.github.io/portfolio/work3/</guid>
      <description></description>
    </item>
    
    <item>
      <title>前端切版-白蘭氏</title>
      <link>https://jackliangtw.github.io/portfolio/work2/</link>
      <pubDate>Thu, 25 May 2023 14:33:01 +0530</pubDate>
      
      <guid>https://jackliangtw.github.io/portfolio/work2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Hugo Web完整架設流程</title>
      <link>https://jackliangtw.github.io/blog/hugowebwithgithub/</link>
      <pubDate>Wed, 17 May 2023 19:41:01 +0530</pubDate>
      
      <guid>https://jackliangtw.github.io/blog/hugowebwithgithub/</guid>
      <description>Hugo流程參考來源
Hugo win10安裝教學
1. Github新增2個專案: (A) Source code repository / Hugo source code存放 (HugoBlog)
(B) Production repository / 展示GithubPage (jackliangtw.github.io)
2. 安裝Hugo: win10安裝流程:
下載安裝Hugo:Hugo release
C槽建立 /hugo/bin 資料夾
下載最新版(amd64.zip) [eg: hugo_extended_0.111.3_windows-amd64.zip]
解壓縮到 C/hugo/bin/ 當中
環境變數Path設定新增: C:\Hugo\bin
cmd檢查hugo指令是否成功: hugo version
3. Git clone第一步驟(A),(B)到local端 cd 到(B)專案目錄下: (建立新分支main)git checkout -b main (建立readme檔案)touch README.md git add . git commit -m &amp;#34;add README.md&amp;#34; git push origin main cd到(A)路徑中, 建立hugo專案 &amp;amp;&amp;amp; cd到hugo themes中(準備安裝主題) hugo new sit myHugoBlog cd myHugoBlog/themes 選擇想要的Hugo theme主題安裝 git clone https://github.</description>
    </item>
    
    <item>
      <title>翻書作品集</title>
      <link>https://jackliangtw.github.io/portfolio/work1/</link>
      <pubDate>Sat, 05 Nov 2016 19:41:01 +0530</pubDate>
      
      <guid>https://jackliangtw.github.io/portfolio/work1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Hugo githubPage架設筆記</title>
      <link>https://jackliangtw.github.io/test/work1/</link>
      <pubDate>Sat, 05 Nov 2016 18:25:22 +0530</pubDate>
      
      <guid>https://jackliangtw.github.io/test/work1/</guid>
      <description>Github新增2個專案: (A)Source code repository / Hugo source code存放 (HugoBlog) (B)Production repository / 展示GithubPage (jackliangtw.github.io) 教學來源:https://youtu.be/LIFvgrRxdt4
安裝Hugo: win10安裝流程: C槽建立 /hugo/bin 資料夾 https://github.com/gohugoio/hugo/releases (Google 搜尋 hugo release) 下載最新版(amd64.zip) [eg: hugo_extended_0.111.3_windows-amd64.zip] 解壓縮到 C/hugo/bin/ 當中 環境變數Path設定 C:\Hugo\bin cmd檢查hugo指令是否成功: hugo version 參考:
Git clone(A),(B)到local
====(只有最初建立時候需要)== START == cd 到(B)下: (建立新分支main)git checkout -b main (建立readme檔案)touch README.md git add . git commit -m &amp;ldquo;add README.md&amp;rdquo; git push origin main
====(只有最初建立時候需要)== START == cd到(A)路徑中, 建立hugo專案 hugo new sit myHugoBlog</description>
    </item>
    
    <item>
      <title>Hugo markdown link轉換成&lt;a&gt;時候加上target=blank屬性</title>
      <link>https://jackliangtw.github.io/blog/hugochangelinktotargetblank/</link>
      <pubDate>Sat, 05 Nov 2016 18:25:22 +0530</pubDate>
      
      <guid>https://jackliangtw.github.io/blog/hugochangelinktotargetblank/</guid>
      <description>參考來源
如果希望Hugo當中的.md檔案中的轉成html時候能夠加上target=&amp;lsquo;blank&amp;rsquo;屬性
[链接文字](链接地址) &amp;lt;a href=链接地址&amp;gt;链接文字&amp;lt;/a&amp;gt; 成為
[链接文字](链接地址) &amp;lt;a target=&amp;#39;blank&amp;#39; href=链接地址&amp;gt;链接文字&amp;lt;/a&amp;gt; 可以屬用以下步驟:
創建該檔案 themes\自己所屬用主題名\layouts_default_markup\render-link.html 在該檔案當中使用以下html &amp;lt;a href=&amp;#34;{{ .Destination | safeURL }}&amp;#34;{{ with .Title}} title=&amp;#34;{{ . }}&amp;#34;{{ end }}{{ if strings.HasPrefix .Destination &amp;#34;http&amp;#34; }} target=&amp;#34;_blank&amp;#34; rel=&amp;#34;noopener&amp;#34;{{ end }}&amp;gt;{{ .Text | safeHTML }}&amp;lt;/a&amp;gt; </description>
    </item>
    
    <item>
      <title>AWS Serverless筆記</title>
      <link>https://jackliangtw.github.io/blog/serverlessnote/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jackliangtw.github.io/blog/serverlessnote/</guid>
      <description>參考網址1-Lambda Express setup
參考網址2-Lambda file upload
1. 安裝serverless npm i -g serverless 設定AWS權限: 參考教學 serverless IAM登入:
serverless config credentials --provider aws --key &amp;lt;MyIAM-Key&amp;gt; --secret &amp;lt;MyIAM-SecretKey&amp;gt; aws cli IAM登入:
aws configure 依造步驟輸入... 2. Serverless 建置 node.js模板: 參考教學
serverless create --template aws-nodejs --path myNewProjectName 3.建置node.js環境 cd myNewProjectName npm init
3. node.js專案設定: cd myNewProjectName npm init npm install 4. 部屬到Lambda(cmd在.yml同一層): (直接部屬) sls deploy (部屬到特定region中) sls deploy --region ap-northeast-1 yml參數說明: service: myservice # app and org for use with dashboard.</description>
    </item>
    
    <item>
      <title>Hugo自訂Tag Filter功能筆記</title>
      <link>https://jackliangtw.github.io/blog/hugolayoutaddtagexample/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jackliangtw.github.io/blog/hugolayoutaddtagexample/</guid>
      <description>Hugo文件
1. 打開主題當中/layout 目標html Hugo html相關語法: 1. 宣告變數: 文件
{{ $變數 := &amp;ldquo;某值&amp;rdquo; }}
&amp;lt;!-- 宣告$myVar變數 = .Params.tags.split(&amp;#39;,&amp;#39;) --&amp;gt; {{ $myVar := split .Params.tags &amp;#34;,&amp;#34; }} 2. Range陣列資料陣列資料案染: 文件
後面需要{{end}}作結尾包覆
&amp;lt;!-- 取得index, element寫法 --&amp;gt; {{ range $index, $element := $myVar }} &amp;lt;span&amp;gt;這是Index{{$index}}&amp;lt;/span&amp;gt; &amp;lt;span&amp;gt;這是Element{{$element}}&amp;lt;/span&amp;gt; {{ end }} &amp;lt;!-- 快速寫法 --&amp;gt; {{ range $myVar }} &amp;lt;span&amp;gt;這是Element{{ . }}&amp;lt;/span&amp;gt; {{ end }} 3. if else判斷式 + eq condition判斷: if文件
eq文件
{{if}}最後需要{{end}}作結尾包覆
eq 相當於JS中 ==, 只是2比對值放在它之後,中間用空格區分</description>
    </item>
    
    <item>
      <title>Node.js/AWS Dynamodb UpdateItem</title>
      <link>https://jackliangtw.github.io/blog/nodejsdynamodbupdateitem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jackliangtw.github.io/blog/nodejsdynamodbupdateitem/</guid>
      <description>來源
Update Item 不能 Batch update(批次),一次只能Update一筆(一個id) const AWS = require(&amp;#34;aws-sdk&amp;#34;); AWS.config.update({ region: &amp;#34;ap-northeast-1&amp;#34;, accessKeyId: &amp;#34;AWS--accessKeyId&amp;#34;, secretAccessKey: &amp;#34;AWS--secretAccessKey&amp;#34; }); const docClient = new AWS.DynamoDB.DocumentClient(); const param = { TableName: &amp;#34;UserBackPack&amp;#34;, Key: { uid: abc123456 } , UpdateExpression: &amp;#34;set #key1 = :val1&amp;#34;, ExpressionAttributeNames: { &amp;#34;#key1&amp;#34;: &amp;#34;message&amp;#34; }, ExpressionAttributeValues: { &amp;#34;:val1&amp;#34;: &amp;#34;hello2&amp;#34;, } }; await docClient.update(param).promise(); 參數說明: TableName : Dynamodb資料表Table Key : 該Table partition key(Id) 或 Secondary Id UpdateExpression : 更新參數邏輯, 用下方(4),(5)參數做更新條件 ExpressionAttributeNames : Table Item參數代寫 ExpressionAttributeValues : 更新值參數代寫 </description>
    </item>
    
    <item>
      <title>Python設定AWS金鑰</title>
      <link>https://jackliangtw.github.io/blog/pythonsetawsconfig/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jackliangtw.github.io/blog/pythonsetawsconfig/</guid>
      <description>cmd指令開啟config參數位置
nano ~/.aws/config 設定參數如以下
region = ap-northeast-1 output = json aws_access_key_id = MY_AWS_ACCESS_ID aws_secret_access_key = MY_AWS_SECRET_KEY </description>
    </item>
    
  </channel>
</rss>
